{"version":3,"sources":["webpack:///./src/components/contact/header.js","webpack:///./src/components/contact/submitconfirm.js","webpack:///./src/components/contact/message.js","webpack:///./src/components/contact/email.js","webpack:///./src/components/contact/name.js","webpack:///./src/pages/contact.js","webpack:///./node_modules/emailjs-com/source/index.js","webpack:///./node_modules/emailjs-com/source/models/EmailJSResponseStatus.js","webpack:///./node_modules/emailjs-com/source/services/ui/UI.js"],"names":["Header","Submitconfirm","props","state","clearScreen","messageSubmitted","resetForm","name","email","message","errorMessage","sentMessage","bind","event","templateParams","from_name","this","message_html","emailjs","render","className","id","Component","Message","handleBlur","handleChange","handleSubmit","handleReset","validate","length","setState","target","value","preventDefault","onSubmit","placeholder","rows","onBlur","onChange","type","disabled","onClick","Email","emailSubmitted","test","autofocus","Name","displayHeader","nameSubmitted","Contact","Object","defineProperty","exports","EmailJSResponseStatus_1","EmailJSResponseStatus","UI_1","_userID","_origin","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","key","addEventListener","responseStatus","status","text","open","setRequestHeader","send","appendGoogleCaptcha","templatePrams","element","document","getElementById","init","userID","origin","serviceID","templateID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","querySelector","nodeName","UI","progressState","formData","FormData","append","then","response","successState","error","errorState","httpResponse","responseText","clearAll","classList","remove","PROGRESS","DONE","ERROR","add"],"mappings":"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","file":"component---src-pages-contact-js-47b09a8dee9c39c5d6d1.js","sourcesContent":["import React from 'react';\n\nimport './contact.css';\n\nexport const Header = () => {\n  return (\n    <h1>Contact Me</h1>\n   );\n};\n\nexport default Header;\n","import React, {Component} from 'react';\n\nimport './contact.css';\nimport * as emailjs from 'emailjs-com';\n\nclass Submitconfirm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearScreen: false,\n      messageSubmitted: false,\n      resetForm: false,\n      name: this.props.name,\n      email: this.props.email,\n      message: this.props.message,\n      errorMessage: \"\",\n    };\n\n    this.sentMessage = this.sentMessage.bind(this);\n  }\n\n  sentMessage(event) {\n    let templateParams = {\n      from_name: this.state.name + '(' + this.state.email + ')',\n      message_html: this.state.message\n    }\n\n    emailjs.send('gmail', 'template_dMLAoPSX', templateParams, 'user_BtKvWAPuenSW5h6bY6wqU')\n  }\n\n  render () {\n    return (\n      <div className=\"form-app\">\n        {this.sentMessage()}\n        <div id=\"form-app\">\n          <p className=\"submit-message\">Thank you for reaching out!</p>\n          <p className=\"submit-message\">Your email has been submitted and I will be in touch with you shortly.</p>\n          <br />\n          <h3>Your Message:</h3>\n          <br />\n          <div className=\"user-info\">\n            <span className=\"ion-ios-person\"></span>\n            <small>&nbsp;&nbsp;{this.props.name}</small>\n          </div>\n          <br/>\n          <div className=\"user-info\">\n            <span className=\"ion-ios-mail\"></span>\n             <small>&nbsp;&nbsp;{this.props.email}</small>\n          </div>\n          <br />\n          <div className=\"user-info\">\n            <span className=\"ion-ios-create\"></span>\n            <small>&nbsp;&nbsp;{this.props.message}</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Submitconfirm;\n","import React, { Component } from 'react'\n\nimport Header from './header'\nimport Submitconfirm from './submitconfirm'\nimport Name from './name'\nimport './contact.css'\n\nclass Message extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      clearScreen: false,\n      messageSubmitted: false,\n      resetForm: false,\n      name: this.props.name,\n      email: this.props.email,\n      message: '',\n      errorMessage: '',\n    }\n    this.handleBlur = this.handleBlur.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleReset = this.handleReset.bind(this)\n  }\n\n  validate() {\n    return this.state.message.length > 0\n  }\n\n  handleBlur(event) {\n    if (!this.validate()) {\n      this.setState({ errorMessage: 'A message is required!' })\n    } else {\n      this.setState({ errorMessage: '' })\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ message: event.target.value })\n  }\n\n  handleSubmit(event) {\n    if (!this.validate()) {\n      event.preventDefault()\n      return\n    } else {\n      event.preventDefault()\n      this.setState({ clearScreen: true, messageSubmitted: true })\n    }\n  }\n\n  handleReset() {\n    this.setState({ clearScreen: true, resetForm: true })\n  }\n\n  render() {\n    if (!this.state.clearScreen) {\n      return (\n        <div className=\"form-app\">\n          <div id=\"form-app\">\n            <Header />\n            <div className=\"form-container\">\n              <div className=\"user-info\">\n                <span className=\"ion-ios-person\"></span>\n                <span>&nbsp;&nbsp;{this.state.name}</span>\n              </div>\n              <br />\n              <div className=\"user-info\">\n                <span className=\"ion-ios-mail\"></span>\n                <span>&nbsp;&nbsp;{this.state.email}</span>\n              </div>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-input\">\n                  <span className=\"ion-md-create\"></span>\n                  <textarea\n                    value={this.state.value}\n                    placeholder=\"Write your message\"\n                    rows=\"4\"\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <span className=\"error-message\">{this.state.errorMessage}</span>\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  disabled={!this.validate()}\n                />\n                <input type=\"button\" value=\"Reset\" onClick={this.handleReset} />\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (this.state.messageSubmitted) {\n      return (\n        <Submitconfirm\n          name={this.state.name}\n          email={this.state.email}\n          message={this.state.message}\n        />\n      )\n    }\n    if (this.state.resetForm) {\n      return <Name />\n    }\n  }\n}\n\nexport default Message\n","import React, {Component} from 'react'\n\nimport {Header} from './header'\nimport Message from './message'\nimport Name from './name'\nimport './contact.css'\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearScreen: false,\n      emailSubmitted: false,\n      resetForm: false,\n      name: this.props.name,\n      email: \"\",\n      errorMessage: \"\",\n    };\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  validate() {\n    return (\n      /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(this.state.email)\n    );\n  }\n\n  handleBlur(event) {\n    if (!this.validate()) {\n      this.setState({errorMessage: \"A valid email address is required!\"})\n    } else {\n      this.setState({errorMessage: \"\"});\n    }\n  }\n\n  handleChange(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handleSubmit(event) {\n    if (!this.validate()) {\n      event.preventDefault();\n      return;\n    } else {\n      event.preventDefault();\n      this.setState({clearScreen: true, emailSubmitted: true});\n    }\n  }\n\n  handleReset() {\n    this.setState({clearScreen: true, resetForm: true});\n  }\n\n  render() {\n    if (!this.state.clearScreen) {\n      return (\n        <div className=\"form-app\">\n          <div id=\"form-app\">\n            <Header />\n            <div className=\"form-container\">\n              <div className=\"user-info\">\n                <span className=\"ion-ios-person\"></span>\n                <span>&nbsp;&nbsp;{this.state.name}</span>\n              </div>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-input\">\n                    <span className=\"ion-ios-mail\"></span>\n                  <input type=\"email\" value={this.state.value} placeholder=\"Please enter your email address\"\n  autofocus=\"true\" onBlur={this.handleBlur} onChange={this.handleChange} />\n                </div>\n                <span className=\"error-message\">{this.state.errorMessage}</span>\n                <input type=\"submit\" value=\"Next\" disabled={!this.validate()} />\n                <input type=\"button\" value=\"Reset\" onClick={this.handleReset} />\n              </form>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.emailSubmitted) {\n      return (\n        <Message name={this.state.name} email={this.state.email} />\n      );\n    }\n    if (this.state.resetForm) {\n      return (\n        <Name />\n      );\n    }\n  }\n}\n\nexport default Email\n","import React, { Component } from 'react'\n\nimport Header from './header'\nimport Email from './email'\nimport './contact.css'\n\nclass Name extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayHeader: true,\n      clearScreen: false,\n      nameSubmitted: false,\n      name: '',\n      errorMessage: '',\n    }\n    this.handleBlur = this.handleBlur.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  validate() {\n    return this.state.name.length > 0\n  }\n\n  handleBlur(event) {\n    if (!this.validate()) {\n      this.setState({ errorMessage: 'A name is required!' })\n    } else {\n      this.setState({ errorMessage: '' })\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value })\n  }\n\n  handleSubmit(event) {\n    if (!this.validate()) {\n      event.preventDefault()\n      return\n    } else {\n      event.preventDefault()\n      this.setState({ clearScreen: true, nameSubmitted: true })\n    }\n  }\n\n  render() {\n    if (!this.state.clearScreen) {\n      return (\n        <div className=\"form-app\">\n          <div id=\"form-app\">\n            <Header />\n            <div className=\"form-container\">\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-input\">\n                  <span className=\"ion-ios-person\"></span>\n                  <input\n                    type=\"text\"\n                    value={this.state.value}\n                    placeholder=\"Please enter your name\"\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <span className=\"error-message\">{this.state.errorMessage}</span>\n                <input type=\"submit\" value=\"Next\" disabled={!this.validate()} />\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (this.state.nameSubmitted) {\n      return <Email name={this.state.name} />\n    }\n  }\n}\n\nexport default Name\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport Name from '../components/contact/name'\n\nconst Contact = () => (\n  <Layout>\n    <Name />\n  </Layout>\n)\n\nexport default Contact\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EmailJSResponseStatus_1 = require(\"./models/EmailJSResponseStatus\");\n\nexports.EmailJSResponseStatus = EmailJSResponseStatus_1.EmailJSResponseStatus;\n\nvar UI_1 = require(\"./services/ui/UI\");\n\nvar _userID = null;\nvar _origin = 'https://api.emailjs.com';\n\nfunction sendPost(url, data, headers) {\n  if (headers === void 0) {\n    headers = {};\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', function (event) {\n      var responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target);\n\n      if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n        resolve(responseStatus);\n      } else {\n        reject(responseStatus);\n      }\n    });\n    xhr.addEventListener('error', function (event) {\n      reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target));\n    });\n    xhr.open('POST', url, true);\n\n    for (var key in headers) {\n      xhr.setRequestHeader(key, headers[key]);\n    }\n\n    xhr.send(data);\n  });\n}\n\nfunction appendGoogleCaptcha(templatePrams) {\n  var element = document.getElementById('g-recaptcha-response');\n\n  if (element && element.value) {\n    templatePrams['g-recaptcha-response'] = element.value;\n  }\n\n  element = null;\n  return templatePrams;\n}\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\n\n\nfunction init(userID, origin) {\n  _userID = userID;\n  _origin = origin || 'https://api.emailjs.com';\n}\n\nexports.init = init;\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {Object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\n\nfunction send(serviceID, templateID, templatePrams, userID) {\n  var params = {\n    lib_version: '2.4.1',\n    user_id: userID || _userID,\n    service_id: serviceID,\n    template_id: templateID,\n    template_params: appendGoogleCaptcha(templatePrams)\n  };\n  return sendPost(_origin + '/api/v1.0/email/send', JSON.stringify(params), {\n    'Content-type': 'application/json'\n  });\n}\n\nexports.send = send;\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\n\nfunction sendForm(serviceID, templateID, form, userID) {\n  if (typeof form === 'string') {\n    form = document.querySelector(form);\n  }\n\n  if (!form || form.nodeName !== 'FORM') {\n    throw 'Expected the HTML form element or the style selector of form';\n  }\n\n  UI_1.UI.progressState(form);\n  var formData = new FormData(form);\n  formData.append('lib_version', '2.4.1');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', userID || _userID);\n  return sendPost(_origin + '/api/v1.0/email/send-form', formData).then(function (response) {\n    UI_1.UI.successState(form);\n    return response;\n  }, function (error) {\n    UI_1.UI.errorState(form);\n    return Promise.reject(error);\n  });\n}\n\nexports.sendForm = sendForm;\nexports[\"default\"] = {\n  init: init,\n  send: send,\n  sendForm: sendForm\n};","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EmailJSResponseStatus =\n/** @class */\nfunction () {\n  function EmailJSResponseStatus(httpResponse) {\n    this.status = httpResponse.status;\n    this.text = httpResponse.responseText;\n  }\n\n  return EmailJSResponseStatus;\n}();\n\nexports.EmailJSResponseStatus = EmailJSResponseStatus;","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UI =\n/** @class */\nfunction () {\n  function UI() {}\n\n  UI.clearAll = function (form) {\n    form.classList.remove(this.PROGRESS);\n    form.classList.remove(this.DONE);\n    form.classList.remove(this.ERROR);\n  };\n\n  UI.progressState = function (form) {\n    this.clearAll(form);\n    form.classList.add(this.PROGRESS);\n  };\n\n  UI.successState = function (form) {\n    form.classList.remove(this.PROGRESS);\n    form.classList.add(this.DONE);\n  };\n\n  UI.errorState = function (form) {\n    form.classList.remove(this.PROGRESS);\n    form.classList.add(this.ERROR);\n  };\n\n  UI.PROGRESS = 'emailjs-sending';\n  UI.DONE = 'emailjs-success';\n  UI.ERROR = 'emailjs-error';\n  return UI;\n}();\n\nexports.UI = UI;"],"sourceRoot":""}